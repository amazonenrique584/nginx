user www-data;
worker_processes auto;
pid /run/nginx.pid;
#include /etc/nginx/modules-enabled/*.conf;

events {
        worker_connections 1024;
        multi_accept  on;
        use epoll;
}

http {

        # UTF-8
        #charset utf-8;

        ##
        # Basic Settings
        ##

        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        keepalive_timeout 65;
        types_hash_max_size 2048;
        # server_tokens off;
        # ignore_invalid_headers on;
        # reset_timedout_connection on;

        # server_names_hash_bucket_size 64;
        # server_name_in_redirect off;

        include /etc/nginx/mime.types;
        default_type application/octet-stream;

        ##
        # SSL Settings
        ##

        ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # Dropping SSLv3, ref: POODLE
        ssl_prefer_server_ciphers on;

        ##
        # Logging Settings
        ##
        access_log off;
        error_log off;
        #log_format main '$remote_addr - $remote_user [$time_local] "$request" $status $bytes_sent "$http_referer" "$http_user_agent" "$gzip_ratio"';
        #access_log /var/log/nginx/access.log;
        #error_log /var/log/nginx/error.log;

        ##
        # Gzip Settings
        ##

        gzip on;
        gzip_vary on;
        gzip_disable "msie6";
        # gzip_proxied any;
        # gzip_min_length 1000;
        gzip_comp_level 9;
        gzip_buffers 16 8k;
        gzip_http_version 1.1;
        gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

        # SSL and HSTS
        # Only allow save protocols
            ssl_protocols TLSv1.2 TLSv1.3;
        # Prefer server side protocols for SSLv3 and TLSv1
            ssl_prefer_server_ciphers on;
            ssl_ciphers "ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256";
        # SSL session cache
            ssl_session_cache shared:SSL:50m;
            ssl_session_timeout 5m;
            ssl_buffer_size 4k;
            # ssl_session_tickets on;
            ssl_session_tickets off;

        # Problem with sect571 and ecdhe ciphers
            ssl_ecdh_curve secp384r1:secp521r1;

        # add_header Content-Security-Policy "";
         add_header Strict-Transport-Security "max-age=15768000;includeSubDomains;preload";
         add_header X-Frame-Options DENY;
         add_header X-Content-Type-Options nosniff;
         add_header X-XSS-Protection "1; mode=block";
        # add_header Public-Key-Pins '';

        # OCSP stapling
        ssl_stapling on;
        ssl_stapling_verify on;

        ##
        # DoS and DDoS Protection Settings
        ##

        #Define limit connection zone called conn_limit_per_ip with memory size 15m based on the unique IP
        limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:15m;

        #Define limit request to 40/sec in zone called req_limit_per_ip memory size 15m based on IP
        limit_req_zone $binary_remote_addr zone=req_limit_per_ip:15m rate=40r/s;

        #Using the zone called conn_limit_per_ip with max 40 connections per IP
        limit_conn conn_limit_per_ip 40;

        #Using the zone req_limit_per_ip with an exceed queue of size 40 without delay for the 40 additonal
        limit_req zone=req_limit_per_ip burst=40 nodelay;

        #Do not wait for the client body or headers more than 5s (avoid slowloris attack)
        client_body_timeout 5s;
        client_header_timeout 5s;
        send_timeout 5;

        #Establishing body and headers max size to avoid overloading the server I/O
        client_body_buffer_size 256k;
        client_header_buffer_size 2k;
        client_max_body_size 3m;
        large_client_header_buffers 2 2k;

        # NGINX Cache
        proxy_cache_key "$scheme$request_method$host$request_uri";
        proxy_cache_path /tmp/nginx/static_cache levels=1:2 keys_zone=static_cache:10m inactive=60m;

        # Fastcgi
        fastcgi_cache_key "$scheme$request_method$host$request_uri";
        fastcgi_cache_path /tmp/nginx/fastcgi_cache levels=1:2 keys_zone=fastcgi_cache:100m inactive=60m;

        ##
        # Virtual Host Configs
        ##

        # Default server -> definido por mí para retornar una dirección por defecto; para no ser secuestrados los sitios
        server {
            listen 80 default_server;
            listen [::]:80 default_server;

            return 301 https://juegosdenaipes.co/;
        }

        #include /etc/nginx/conf.d/*.conf;
        #include /etc/nginx/sites-enabled/*;
        include /etc/nginx/sites-enabled/*.conf;
}
