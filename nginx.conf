user www-data;
worker_processes auto;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
        worker_connections 1024;
        multi_accept  on;
        use epoll;
}

http {

    # UTF-8
    charset utf-8;

    # Basic Settings
        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        types_hash_max_size 2048;
        server_tokens off;
        ignore_invalid_headers on;

    # Decrease default timeouts to drop slow clients
        keepalive_timeout 40s;
        #send_timeout 20s; # DoS and DDoS Protection Settings
        #client_header_timeout 20s; # DoS and DDoS Protection Settings
        #client_body_timeout 20s; # DoS and DDoS Protection Settings
        reset_timedout_connection on;

    # Hash sizes
        server_names_hash_bucket_size 64;

    # mine types
        default_type  application/octet-stream;
        include /etc/nginx/mime.types;

    # aio threads
        # aio threads=default;

    # log
        access_log off;
        error_log off;
        #log_format main '$remote_addr - $remote_user [$time_local] "$request" $status $bytes_sent "$http_referer" "$http_user_agent" "$gzip_ratio"';
        #access_log /var/log/nginx/access.log main;
        #error_log /var/log/nginx/error.log warn;

    # Limits
        limit_req_zone  $binary_remote_addr  zone=dos_attack:20m   rate=30r/m;

    # Gzip
        gzip on;
        gzip_disable "msie6";
        gzip_vary on;
        gzip_proxied any;
        gzip_comp_level 9;
        gzip_min_length 1000;
        gzip_buffers 16 8k;
        gzip_http_version 1.1;
        gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript application/atom+xml;

    # SSL and HSTS
        # Only allow save protocols
            ssl_protocols TLSv1.2 TLSv1.3;
        # Prefer server side protocols for SSLv3 and TLSv1
            ssl_prefer_server_ciphers on;
            ssl_ciphers "ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256";
        # SSL session cache
            ssl_session_cache shared:SSL:50m;
            ssl_session_timeout 5m;
            ssl_buffer_size 4k;
            # ssl_session_tickets on;
            ssl_session_tickets off;

        # Problem with sect571 and ecdhe ciphers
            ssl_ecdh_curve secp384r1:secp521r1;

        # add_header Content-Security-Policy "";
         add_header Strict-Transport-Security "max-age=15768000;includeSubDomains;preload";
         add_header X-Frame-Options DENY;
         add_header X-Content-Type-Options nosniff;
         add_header X-XSS-Protection "1; mode=block";
        # add_header Public-Key-Pins '';

        # OCSP stapling
        ssl_stapling on;
        ssl_stapling_verify on;

    ##
    # DoS and DDoS Protection Settings
    ##

        #Define limit connection zone called conn_limit_per_ip with memory size 15m based on the unique IP
        limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:15m;

        #Define limit request to 40/sec in zone called req_limit_per_ip memory size 15m based on IP
        limit_req_zone $binary_remote_addr zone=req_limit_per_ip:15m rate=40r/s;

        #Using the zone called conn_limit_per_ip with max 40 connections per IP
        limit_conn conn_limit_per_ip 40;

        #Using the zone req_limit_per_ip with an exceed queue of size 40 without delay for the 40 additonal
        limit_req zone=req_limit_per_ip burst=40 nodelay;

        #Do not wait for the client body or headers more than 5s (avoid slowloris attack)
        client_body_timeout 5s;
        client_header_timeout 5s;
        send_timeout 5;

        #Establishing body and headers max size to avoid overloading the server I/O
        client_body_buffer_size 256k;
        client_header_buffer_size 2k;
        client_max_body_size 3m;
        large_client_header_buffers 2 2k; 

    ##
    # Fastcgi
    ##

        fastcgi_cache_key "$scheme$request_method$host$request_uri";
        fastcgi_cache_path /tmp/nginx/FAST_CACHE levels=1:2 keys_zone=FAST_CACHE:256m inactive=60m;
        fastcgi_cache_valid 200 60m;
        fastcgi_buffer_size 128k;
        fastcgi_buffers 256 4k;
        fastcgi_busy_buffers_size 256k;
        fastcgi_temp_file_write_size 256k;
        fastcgi_cache_valid 200 60m;
        add_header X-Fastcgi-Cache $upstream_cache_status;

    ##
    # Virtual Host Configs
    ##
    
        # Virtual Host Configs
        include /etc/nginx/conf.d/*.conf;
        include /etc/nginx/sites-enabled/*.conf;
}
